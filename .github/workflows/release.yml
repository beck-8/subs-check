name: Sync Upstream Release

on:
  schedule:
    - cron: '0 * * * *'   # 每小时检查一次
  workflow_dispatch:       # 支持手动触发

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout self
        uses: actions/checkout@v3

      - name: Get upstream latest tag and default branch
        id: get_info
        run: |
          echo "Getting latest tag and branch..."
          UPSTREAM_REPO="beck-8/subs-check"
          LATEST_TAG=$(curl -s https://api.github.com/repos/${UPSTREAM_REPO}/releases/latest | jq -r .tag_name)
          DEFAULT_BRANCH=$(curl -s https://api.github.com/repos/${UPSTREAM_REPO} | jq -r .default_branch)

          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "DEFAULT_BRANCH=${DEFAULT_BRANCH}" >> $GITHUB_ENV

          echo "Latest tag: $LATEST_TAG"
          echo "Default branch: $DEFAULT_BRANCH"

      - name: Check if local already has this tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${LATEST_TAG}$"; then
            echo "EXISTS=true" >> $GITHUB_ENV
            echo "Tag $LATEST_TAG already exists in local, skipping sync."
          else
            echo "EXISTS=false" >> $GITHUB_ENV
            echo "Tag $LATEST_TAG not found, syncing..."
          fi

      - name: Sync upstream and create tag
        if: env.EXISTS == 'false'
        run: |
          git config user.name "1dok"
          git config user.email "1dok@users.noreply.github.com"

          git remote add upstream https://github.com/beck-8/subs-check.git
          git fetch upstream ${DEFAULT_BRANCH}:upstream-temp

          git checkout master
          git merge upstream-temp --allow-unrelated-histories --no-edit

          git tag $LATEST_TAG
          git push origin master
          git push origin $LATEST_TAG
