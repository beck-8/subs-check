name: Sync and Release

on:
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次
  workflow_dispatch:      # 允许手动触发

env:
  UPSTREAM: beck-8/subs-check
  DEFAULT_BRANCH: main  # 上游主分支是 main
  LOCAL_BRANCH: master  # 你自己的分支是 master

jobs:
  sync-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config user.name "1dok"
          git config user.email "1dok@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/${UPSTREAM}.git
          git fetch upstream --tags

      - name: Get latest tag from upstream
        id: get_tag
        run: |
          LATEST_TAG=$(git tag -l --sort=-v:refname | grep '^v' | head -n 1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          
      - name: Sync upstream and create tag
        run: |
          git fetch upstream $DEFAULT_BRANCH:upstream-temp
          git checkout $LOCAL_BRANCH

          # Merge upstream, keep local conflicts
          git merge upstream-temp -m "Merge upstream" -X ours || true

          git tag $LATEST_TAG
          git push origin $LOCAL_BRANCH
          git push origin $LATEST_TAG

  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      - name: Check if tag already exists
        id: check
        run: |
          if git rev-parse "$LATEST_TAG" >/dev/null 2>&1; then
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Run GoReleaser
        if: ${{ env.EXISTS == 'false' }}
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
